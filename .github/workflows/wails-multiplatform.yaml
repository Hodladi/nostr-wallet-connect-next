name: Wails build multiplatform
on:
#  workflow_dispatch:
  push:
  release:
    types: [published]
jobs:
  build:
    strategy:
      # Failure in one platform build won't impact the others
      fail-fast: false
      matrix:
        build:
#          - name: 'App'
#            platform: 'linux/amd64'
#            os: 'ubuntu-latest'
#          - name: 'App'
#            platform: 'windows/amd64'
#            os: 'windows-latest'
          - name: 'App'
            platform: 'darwin/arm64'
            os: 'macos-latest-xlarge'
    env:
      REGISTRY: ghcr.io
      IMAGENAME: ${{ github.event.repository.name }}
    runs-on: ${{ matrix.build.os }}
#    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
        name: Check out code
      - name: Setup GoLang
        uses: actions/setup-go@v4
        with:
          check-latest: true
          go-version: 1.22
      # Setup and configure NodeJS
      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 19.x
#      - name: Build wails
#        uses: dAppServer/wails-build-action@v2.2
#        id: build
#        with:
#          build-name: ${{ matrix.build.name }}
#          build-platform: ${{ matrix.build.platform }}
#          package: false
#          go-version: '1.21.1'
      - name: Install Wails
        run:
#          cd frontend && yarn install && yarn build:http
#          cd ..
#          curl -OL https://golang.org/dl/go1.22.0.darwin-arm64.tar.gz
#          sudo tar -C /usr/local -xzf go1.22.0.darwin-arm64.tar.gz
#          export PATH=$PATH:/usr/local/go/bin
          go install github.com/wailsapp/wails/v2/cmd/wails@latest
#          ~/go/bin/wails build -tags "wails"
        shell: bash
#      - name: Install Linux Wails deps
#        run: sudo apt-get update && sudo apt-get install libgtk-3-0 libwebkit2gtk-4.0-dev gcc-aarch64-linux-gnu libgtk-3-dev nsis
#        shell: bash
      - name: Wails Doctor
        working-directory: .
        run: wails doctor
        shell: bash
      # Building step
      - name: Build App
        working-directory: .
        run: wails build -tags "wails"
        #-o ${{ matrix.build.name }}
        #--platform ${{ matrix.build.platform }}
        shell: bash
      - uses: actions/upload-artifact@v3
        with:
          name: Wails Build ${{runner.os}} nostr-wallet-connect
          path: |
            */bin/
            *\bin\*

#      - uses: dAppServer/wails-build-action@v2.2
#        with:
#          build-name: ${{ matrix.build.name }}
#          build-platform: ${{ matrix.build.platform }}
#          package: false
#          go-version: '1.21'
